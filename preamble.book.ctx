% preamble.ctx
% !TEX root = docs/context/QuestWorlds.book.tex

% setup paper size, margins and layout
\setuppapersize[A5]
%\showframe
\setuplayout[	% A5 layout (148.5mm x 210mm
	topspace=11mm,
	header=10mm,
	backspace=13mm,
	width=120mm,
	height=190mm,
	footer=7mm,
	]

\setuppagenumbering
  [alternative=doublesided]

%% setup up mainfont serif to use EB Garamond (with Semibold)

% redefine ebgaramond typescript to use semibold in place of bold
\starttypescript [ebgaramond]
  \definefontsynonym[ebg-Regular]    [name:ebgaramondregular]
  \definefontsynonym[ebg-Italic]     [name:ebgaramonditalic]
  \definefontsynonym[ebg-Bold]       [name:ebgaramondsemibold]
  \definefontsynonym[ebg-BoldItalic] [name:ebgaramondsemibolditalic]
\stoptypescript

\starttypescript [ebgaramond]
  \setups[font:fallback:serif]
  \definefontsynonym[Serif]                [ebg-Regular]    [features=default]
  \definefontsynonym[SerifItalic]          [ebg-Italic]     [features=default]
  \definefontsynonym[SerifBold]            [ebg-Bold]       [features=default]
  \definefontsynonym[SerifBoldItalic]      [ebg-BoldItalic] [features=default]
\stoptypescript

\starttypescript [ebgaramond]
  \definetypeface [ebgaramond]    [rm] [serif] [ebgaramond]    [default]
\stoptypescript

\definefontfamily[mainface][rm][ebgaramond][%
	tf=name:ebgaramondregular,
	it=name:ebgaramonditalic,
	bf=name:ebgaramondsemibold,
	bi=name:ebgaramondsemibolditalic,
	]

%\usetypescript[kerkissans]
%\definefontfamily[mainface][ss][kerkissans]

% basic header styling
\setuphead[chapter]            [style=\tfc \bf \ss,page=yes,header=empty,footer=chapter]
\setuphead[section]            [style=\tfb \bf \ss]
\setuphead[subsection]         [style=\tfa \bf \ss]
\setuphead[subsubsection]      [style=\bf \ss]
\setuphead[subsubsubsection]   [style=\sc \ss]
\setuphead[subsubsubsubsection][style=\it \ss]

\definevspacing[Sm][4mm]
\setupheads[chapter,section,subsection,subsubsection,subsubsubsection,subsubsubsubsection]%
[before={\blank[Sm]},after={\blank[Sm]}]

\setuphead[title][before={\blank[back,force]}]

%\showgrid
%\showstruts \showframe


% ToC
\setupcombinedlist[content][list={chapter,section,subsection}, alternative=c,]

% ToC indenting and alignments.
\setuplist[chapter][margin=0mm]
\setuplist[section][margin=2ex]
\setuplist[subsection][margin=5ex]

\definefontfeature[Swashes][script=latn, swsh=yes]

\setuplist[chapter][style={\tfa\bf\feature[+][Swashes]}]
\setuplist[section][style={\feature[+][Swashes]}]
% pagestyle=normal for changing the appearance of pagenumber
\setuplist[subsubsection][style=slanted, pagestyle=normal]


%% consistent-width page numbers in TOC

% command to override both proportional width numbers and slanting
\define\tfstyletabularnumbers{\tf \feature[+][tabularnumbers]}

\setuplist[chapter][pagestyle={\feature[+][tabularnumbers]}]
\setuplist[section][pagestyle={\feature[+][tabularnumbers]}]
\setuplist[subsection][pagestyle={\feature[+][tabularnumbers]}]
\setuplist[subsubsection][pagestyle={\tfstyletabularnumbers}]
\setuplist[subsubsubsection][pagestyle={\feature[+][tabularnumbers]}]
%% end pagenum


% style section numbers gray and proportional width
\setuphead[chapter,section,subsection,subsubsection,subsubsubsection]%
	[%
	color=red,
	]

% override ToC command to change interline space
\define\completecontent{%
  \title{Contents}
  \start
      \setupwhitespace[none] % inter-para whitespace independent of document para spacing
      \placecontent
  \stop
  \blank[1cm]
}


%% headers and footers

% small book style headers & footers
\setuppagenumbering[location=]
\setupheadertexts[]
\setupheadertexts[chapter][pagenumber][pagenumber][section]
\setupfootertexts[]
\definetext[chapter][footer][pagenumber]

\setupitemize
   [1]       % level of itemization
   [fit]
   [%
        margin=1.3em,
        distance=1ex,
    ]

%% format table captions

% -- start lua macros for changing case and splitting strings
\startluacode
	userdata = userdata or {}
	
	-- gets the first word in s
	function userdata.firstWord(s)
		local firstSpace = s:find(" ") - 1
		context(s:sub(1,firstSpace))
	end
	
	-- gets everything from the second word to end
	function userdata.afterFirstWord(s)
		local firstSpace = s:find(" ") + 1
		context(s:sub(firstSpace))
	end
	
	-- lowercase the argument
	function userdata.lowerCase(s)
		context(s:lower())
	end
\stopluacode

\defineexpandable[1]\FirstWord{\ctxlua{userdata.firstWord([==[#1]==])}}
\defineexpandable[1]\TheRest{\ctxlua{userdata.afterFirstWord([==[#1]==])}}
\defineexpandable[1]\LowerCase{\ctxlua{userdata.lowerCase([==[#1]==])}}
% -- stop lua macros

%-- start title case macro
\def\IgnoredWords
  {the,a,an,is,to,of,or,and,but,for}

\define[1]\CapitalizeWithIgnoreWord
  {\doifinsetelse{#1}\IgnoredWords{#1}{\Word{#1}}}

\def\TitleCase
  {\applytosplitstringwordspaced\CapitalizeWithIgnoreWord}
%-- end title case macro

\define[1]\TableCaptionText{%
	{\bf \FirstWord{#1}} % put number in bold
	{\sc {\TitleCase{\LowerCase{\TheRest{#1}}}}} % set caption text in small caps
  }

\setupcaption[table]
  [%
	textcommand={\TableCaptionText},
  ]

%% end format table captions

%% zebra stripe tables
\definecolor[lightergray][r=0.92,g=0.92,b=0.92]

\def\TableBackgroundColour{%
  \ifnum\currentxtablerow>0
    \ifodd\currentxtablerow\else
    	lightergray%
    \fi
  \fi
}

\def\TopRowFrameOn{%
  \ifnum\currentxtablerow=2
    on%
    \else%
    off%
  \fi
}

\setupxtable[head][
  topframe=on,
  bottomframe=on,
]
\setupxtable[
  background=color,
  backgroundcolor=\TableBackgroundColour,
  topframe=\TopRowFrameOn,	% needed because background draws *over* frame of the previous row!
  offset=1mm,
]

%% end zebra stripe tables

% glossary layout
\define[1]\GlossaryTerm{#1:}
\setupdescription
	[description]
	[
		alternative=hanging,
%		align=flushleft,
		headstyle=normal,
		headcommand={\GlossaryTerm},
		width=fit,
		margin=2ex,
%		distance=0.1mm,
		distance=\widthofstring{\space},
		after={\blank[disable]},
	]


